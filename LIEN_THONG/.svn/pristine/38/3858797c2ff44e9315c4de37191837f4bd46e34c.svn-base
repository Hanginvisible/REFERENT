using CMCLIS.CVAN.CORE;
using CMCLIS.CVAN.CORE.Sercurity;
using CMCLIS.CVAN.SETTING;
using CMCLIS.CVAN.ENTITY;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Xml;
using CMCLIS.CVAN.DATA.OBJECTS;

namespace CMCLIS.CVAN.WServiceReponse
{
    public class REQUEST_PROCESS_DATA
    {
        public static Response SenderToThue(string xmlContent, string CVAN_CODE)
        {
            try
            {
                //THAMSO
                string MSG_TYPE = string.Empty;                
                string MA_HS = string.Empty;
                string MA_GCN = string.Empty;
                string SO_PHIEU = string.Empty;
                //KETQUA
                string MA_CQT = string.Empty;
                string NGAYTRA = string.Empty;
                string NGUOITRA = string.Empty;
                string TONG_PHAI_NOP = string.Empty;
                string TONG_MIEN_GIAM = string.Empty;
                string TONG_DA_NOP = string.Empty;
                string TONG_CON_PNOP = string.Empty;
                string MA_KETQUA = string.Empty;
                string DIEN_GIAI = string.Empty;                

                XmlDocument xmlDocumentSign = new XmlDocument();
                xmlDocumentSign.LoadXml(xmlContent);
                string namespaceURISign = xmlDocumentSign.DocumentElement.NamespaceURI;
                if (!string.IsNullOrEmpty(namespaceURISign))
                {
                    XmlNamespaceManager nsmgrSign = new XmlNamespaceManager(xmlDocumentSign.NameTable);
                    nsmgrSign.AddNamespace("NamespaceCode", namespaceURISign);
                    MSG_TYPE = xmlDocumentSign.SelectNodes("//NamespaceCode:MSG_TYPE", nsmgrSign)[0].InnerXml;
                    MA_HS = xmlDocumentSign.SelectNodes("//NamespaceCode:MA_HS", nsmgrSign)[0].InnerXml;
                    MA_GCN = xmlDocumentSign.SelectNodes("//NamespaceCode:MA_GCN", nsmgrSign)[0].InnerXml;
                    SO_PHIEU = xmlDocumentSign.SelectNodes("//NamespaceCode:SO_PHIEU", nsmgrSign)[0].InnerXml;                   
                }

                XmlDocument xmlDocumentResponse = new XmlDocument();
                xmlDocumentResponse.LoadXml(Utility.LoadFile(Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().Location) + @"\TEMPLATE\GuiPhieuChuyen_Response.xml"));
                string namespaceURIResponse = xmlDocumentResponse.DocumentElement.NamespaceURI;
                if (!string.IsNullOrEmpty(namespaceURIResponse))
                {
                    XmlNamespaceManager nsmgrResponse = new XmlNamespaceManager(xmlDocumentResponse.NameTable);
                    nsmgrResponse.AddNamespace("NamespaceCode", namespaceURIResponse);
                    xmlDocumentResponse.SelectNodes("//NamespaceCode:MSG_TYPE", nsmgrResponse)[0].InnerXml = MSG_TYPE;
                    xmlDocumentResponse.SelectNodes("//NamespaceCode:MA_HS", nsmgrResponse)[0].InnerXml = MA_HS;
                    xmlDocumentResponse.SelectNodes("//NamespaceCode:MA_GCN", nsmgrResponse)[0].InnerXml = MA_GCN;
                    xmlDocumentResponse.SelectNodes("//NamespaceCode:SO_PHIEU", nsmgrResponse)[0].InnerXml = SO_PHIEU;

                    xmlDocumentResponse.SelectNodes("//NamespaceCode:MA_CQT", nsmgrResponse)[0].InnerXml = MA_CQT;
                    xmlDocumentResponse.SelectNodes("//NamespaceCode:NGAYTRA", nsmgrResponse)[0].InnerXml = NGAYTRA;
                    xmlDocumentResponse.SelectNodes("//NamespaceCode:NGUOITRA", nsmgrResponse)[0].InnerXml = NGUOITRA;
                    xmlDocumentResponse.SelectNodes("//NamespaceCode:TONG_PHAI_NOP", nsmgrResponse)[0].InnerXml = TONG_PHAI_NOP;
                    xmlDocumentResponse.SelectNodes("//NamespaceCode:TONG_MIEN_GIAM", nsmgrResponse)[0].InnerXml = TONG_MIEN_GIAM;
                    xmlDocumentResponse.SelectNodes("//NamespaceCode:TONG_DA_NOP", nsmgrResponse)[0].InnerXml = TONG_DA_NOP;
                    xmlDocumentResponse.SelectNodes("//NamespaceCode:TONG_CON_PNOP", nsmgrResponse)[0].InnerXml = TONG_CON_PNOP;
                    xmlDocumentResponse.SelectNodes("//NamespaceCode:MA_KETQUA", nsmgrResponse)[0].InnerXml = MA_KETQUA;
                    xmlDocumentResponse.SelectNodes("//NamespaceCode:DIEN_GIAI", nsmgrResponse)[0].InnerXml = DIEN_GIAI;
                }
                CVAN_MSGIInfo cVAN_MSGIInfo = new CVAN_MSGIInfo()
                {
                    CVAN_CODE = Guid.NewGuid().ToString().ToUpper(),
                    CVAN_CONTENT_XML = xmlDocumentResponse.OuterXml,
                    CVAN_MSGO_CODE = CVAN_CODE,
                    CVAN_MSG_TYPE_CODE = MSG_TYPE,
                    CVAN_MSG_TYPE_NAME = "Hồ sơ địa chính",
                    CVAN_STATUS_CODE = MA_KETQUA,
                    CVAN_STATUS_NAME = DIEN_GIAI,
                    CUSER = "TCT"
                };
                int result = DataObjectFactory.GetInstanceCVAN_MSGI().Add(cVAN_MSGIInfo);
                return new Response
                {
                    ResultCode = result == 1 ? Constant.RETURN_CODE_SUCCESS : Constant.RETURN_CODE_ERROR,
                    Message = result == 1 ? Constant.MESSAGE_SUCCESS : Constant.MESSAGE_ERROR,
                    ReturnValue = result == 1 ? cVAN_MSGIInfo.CVAN_CONTENT_XML : string.Empty
                };

            }
            catch (Exception ex)
            {
                LogEventError.LogEvent(System.Reflection.MethodBase.GetCurrentMethod().Name, ex);
                return new Response
                {
                    ResultCode = Constant.RETURN_CODE_ERROR,
                    Message = Constant.MESSAGE_ERROR,
                    ReturnValue = ex.Message
                };
            }
        }

    }
}
